package com.oracle.springboot.dao;

import com.oracle.springboot.pojo.Comment;
import com.oracle.springboot.pojo.Question;
import com.oracle.springboot.pojo.QuestionExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.PathVariable;
@Repository
public interface QuestionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int countByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int deleteByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int insert(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int insertSelective(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    List<Question> selectByExampleWithBLOBs(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    List<Question> selectByExample(QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    Question selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByExampleSelective(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByExampleWithBLOBs(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByExample(@Param("record") Question record, @Param("example") QuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByPrimaryKeySelective(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByPrimaryKeyWithBLOBs(Question record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbggenerated Fri Sep 27 10:05:44 CST 2019
     */
    int updateByPrimaryKey(Question record);



    @Select("select count(1) from `question`")
    Integer count();

    @Select("select * from `question` ORDER BY createdate Desc limit #{offset},#{size}")
    List<Question> PageList(Integer offset, Integer size);

    @Select("select count(1) from `question` where createUser=#{userId}")
    Integer countByUser(@PathVariable(value = "userId")Long id);

    @Select("select * from `question` where createUser=#{userId} limit #{offset},#{size}")
    List<Question> PageListByUser(@PathVariable(value = "userId")Long userId, @Param(value = "offset") Integer offset, @Param(value = "size")  Integer size);

    @Update("update `question`  SET YUEDU=YUEDU+1 where id=#{id}")
    void updateYueDu(Long id);

    @Update("update `question`  SET PINGLUN=PINGLUN+1 where id=#{parentid}")
    void updatePingLun(Comment comment);

    @Select("SELECT * FROM `question` WHERE ID=#{questionId}")
    Question getQuestionById(Long parentid);

    @Select("SELECT * FROM `question` where id!=#{id} and tag regexp #{tag}")
    List<Question> selectTag(Question question);
}